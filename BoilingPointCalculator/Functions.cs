using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BoilingPointCalculator
{
    public static class Functions
    {
        //static void Main(string[] args)
        //{
        //    Console.WriteLine(GetH20BoilingPoint(7500));

        //    //Console.Write("**************** INFORMATION ***************" + "\n");
        //    //Console.Write("This example was auto-generated by the language-agnostic dev/scripts/example_generator.py script written by Ian Bell" + "\n");
        //    //Console.Write("CoolProp version:" + " " + CoolProp.get_global_param_string("version") + "\n");
        //    //Console.Write("CoolProp gitrevision:" + " " + CoolProp.get_global_param_string("gitrevision") + "\n");
        //    //Console.Write("CoolProp Fluids:" + " " + CoolProp.get_global_param_string("FluidsList") + "\n");

        //    //var FluidString = CoolProp.get_global_param_string("FluidsList");
        //    //List<string> Fluids = FluidString.Split(',').ToList();
        //    //foreach (string Fluid in Fluids)
        //    //{
        //    //    try { 
        //    //    Console.Write("Boiling temperature of " + Fluid + " at 101325 Pa:" + " " + (Math.Round(CoolProp.PropsSI("T", "P", 10000, "Q", 0, Fluid), 2) - 273.15) + " " + "C" + "\n");
        //    //    }
        //    //    catch { }

        //    //}




        //    //// See http://www.coolprop.org/coolprop/HighLevelAPI.html#table-of-string-inputs-to-propssi-function for a list of inputs to high-level interface;
        //    //Console.Write("*********** HIGH LEVEL INTERFACE *****************" + "\n");
        //    //Console.Write("Critical temperature of water:" + " " + CoolProp.Props1SI("Water", "Tcrit") + " " + "K" + "\n");
        //    //Console.Write("Boiling temperature of water at 101325 Pa:" + " " + CoolProp.PropsSI("T", "P", 101325, "Q", 0, "Water") + " " + "K" + "\n");

        //}

        public static decimal GetWaterBoilingPoint(decimal PressureInPa)
        {
            decimal BoilingPoint = 0;
            if (PressureInPa >= 612  && PressureInPa <= 500000)
            { 
            BoilingPoint = Math.Round(Convert.ToDecimal(CoolProp.PropsSI("T", "P", Convert.ToDouble(PressureInPa), "Q", 0, "Water") - 273.15),2);
            }
            return BoilingPoint;
        }
        public static decimal GetEtOHBoilingPoint(decimal PressureInPa)
        {
            decimal BoilingPoint = Math.Round(Convert.ToDecimal(CoolProp.PropsSI("T", "P", Convert.ToDouble(PressureInPa), "Q", 0, "Ethanol") - 273.15), 2);
            return BoilingPoint;
        }
        public static decimal GetMeOHBoilingPoint(decimal PressureInPa)
        {
            decimal BoilingPoint = Math.Round(Convert.ToDecimal(CoolProp.PropsSI("T", "P", Convert.ToDouble(PressureInPa), "Q", 0, "Methanol") - 273.15), 2);
            return BoilingPoint;
        }
        public static decimal GetAcetoneBoilingPoint(decimal PressureInPa)
        {
            decimal BoilingPoint = Math.Round(Convert.ToDecimal(CoolProp.PropsSI("T", "P", Convert.ToDouble(PressureInPa), "Q", 0, "Acetone") - 273.15), 2);
            return BoilingPoint;
        }
    }
}
